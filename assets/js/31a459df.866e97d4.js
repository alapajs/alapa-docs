"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[8616],{265:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"utils/string","title":"String","description":"This module provides a set of utility functions for manipulating and analyzing strings.","source":"@site/docs/utils/string.mdx","sourceDirName":"utils","slug":"/utils/string","permalink":"/docs/utils/string","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/utils/string.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"String"},"sidebar":"tutorialSidebar","previous":{"title":"Schema","permalink":"/docs/api-docs/schema"},"next":{"title":"Number","permalink":"/docs/utils/number"}}');var i=s(4848),l=s(8453);const t={sidebar_position:1,title:"String"},a="String Utility Functions",d={},c=[{value:"<code>shuffle(data: string): string</code>",id:"shuffledata-string-string",level:2},{value:"Parameters:",id:"parameters",level:3},{value:"Returns:",id:"returns",level:3},{value:"Example:",id:"example",level:3},{value:"<code>capitalize(text: string): string</code>",id:"capitalizetext-string-string",level:2},{value:"Parameters:",id:"parameters-1",level:3},{value:"Returns:",id:"returns-1",level:3},{value:"Example:",id:"example-1",level:3},{value:"<code>capitalizeWords(text: string): string</code>",id:"capitalizewordstext-string-string",level:2},{value:"Parameters:",id:"parameters-2",level:3},{value:"Returns:",id:"returns-2",level:3},{value:"Example:",id:"example-2",level:3},{value:"<code>toSnakeCase(text: string): string</code>",id:"tosnakecasetext-string-string",level:2},{value:"Parameters:",id:"parameters-3",level:3},{value:"Returns:",id:"returns-3",level:3},{value:"Example:",id:"example-3",level:3},{value:"<code>toKebabCase(text: string): string</code>",id:"tokebabcasetext-string-string",level:2},{value:"Parameters:",id:"parameters-4",level:3},{value:"Returns:",id:"returns-4",level:3},{value:"Example:",id:"example-4",level:3},{value:"<code>toCamelCase(text: string): string</code>",id:"tocamelcasetext-string-string",level:2},{value:"Parameters:",id:"parameters-5",level:3},{value:"Returns:",id:"returns-5",level:3},{value:"Example:",id:"example-5",level:3},{value:"<code>reverse(text: string): string</code>",id:"reversetext-string-string",level:2},{value:"Parameters:",id:"parameters-6",level:3},{value:"Returns:",id:"returns-6",level:3},{value:"Example:",id:"example-6",level:3},{value:"<code>isPalindrome(text: string): boolean</code>",id:"ispalindrometext-string-boolean",level:2},{value:"Parameters:",id:"parameters-7",level:3},{value:"Returns:",id:"returns-7",level:3},{value:"Example:",id:"example-7",level:3},{value:"<code>isNumeric(text: string): boolean</code>",id:"isnumerictext-string-boolean",level:2},{value:"Parameters:",id:"parameters-8",level:3},{value:"Returns:",id:"returns-8",level:3},{value:"Example:",id:"example-8",level:3},{value:"<code>toTitleCase(text: string): string</code>",id:"totitlecasetext-string-string",level:2},{value:"Parameters:",id:"parameters-9",level:3},{value:"Returns:",id:"returns-9",level:3},{value:"Example:",id:"example-9",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components},{CodeScreen:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"string-utility-functions",children:"String Utility Functions"})}),"\n",(0,i.jsx)(n.p,{children:"This module provides a set of utility functions for manipulating and analyzing strings."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"shuffledata-string-string",children:(0,i.jsx)(n.code,{children:"shuffle(data: string): string"})}),"\n",(0,i.jsx)(n.p,{children:"Randomly shuffles the characters in a string."}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"}),": The input string to be shuffled."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A new string with characters randomly shuffled."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'shuffle("hello"); // e.g., "elolh"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"capitalizetext-string-string",children:(0,i.jsx)(n.code,{children:"capitalize(text: string): string"})}),"\n",(0,i.jsx)(n.p,{children:"Capitalizes the first letter of a string. All other letters are converted to lowercase."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-1",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-1",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The capitalized string."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'capitalize("hello WORLD"); // "Hello"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"capitalizewordstext-string-string",children:(0,i.jsx)(n.code,{children:"capitalizeWords(text: string): string"})}),"\n",(0,i.jsx)(n.p,{children:"Capitalizes the first letter of each word in a string."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-2",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-2",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The string with each word capitalized."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'capitalizeWords("hello world"); // "Hello World"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"tosnakecasetext-string-string",children:(0,i.jsx)(n.code,{children:"toSnakeCase(text: string): string"})}),"\n",(0,i.jsxs)(n.p,{children:["Converts a string to ",(0,i.jsx)(n.code,{children:"snake_case"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-3",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-3",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The string in ",(0,i.jsx)(n.code,{children:"snake_case"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'toSnakeCase("Hello World"); // "hello_world"\r\ntoSnakeCase("helloWorld"); // "hello_world"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"tokebabcasetext-string-string",children:(0,i.jsx)(n.code,{children:"toKebabCase(text: string): string"})}),"\n",(0,i.jsxs)(n.p,{children:["Converts a string to ",(0,i.jsx)(n.code,{children:"kebab-case"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-4",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-4",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The string in ",(0,i.jsx)(n.code,{children:"kebab-case"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-4",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'toKebabCase("Hello World"); // "hello-world"\r\ntoKebabCase("helloWorld"); // "hello-world"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"tocamelcasetext-string-string",children:(0,i.jsx)(n.code,{children:"toCamelCase(text: string): string"})}),"\n",(0,i.jsxs)(n.p,{children:["Converts a string to ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-5",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-5",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The string in ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-5",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'toCamelCase("hello world"); // "helloWorld"\r\ntoCamelCase("Hello World"); // "helloWorld"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"reversetext-string-string",children:(0,i.jsx)(n.code,{children:"reverse(text: string): string"})}),"\n",(0,i.jsx)(n.p,{children:"Reverses the characters of a string."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-6",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-6",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The reversed string."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-6",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'reverse("hello"); // "olleh"\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"ispalindrometext-string-boolean",children:(0,i.jsx)(n.code,{children:"isPalindrome(text: string): boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Checks whether a string is a palindrome, ignoring spaces and case."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-7",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-7",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"true"})," if the string is a palindrome, otherwise ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-7",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'isPalindrome("Racecar"); // true\r\nisPalindrome("Was it a car or a cat I saw"); // true\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"isnumerictext-string-boolean",children:(0,i.jsx)(n.code,{children:"isNumeric(text: string): boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Checks whether a string contains only digits."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-8",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-8",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"true"})," if the string contains only digits, otherwise ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-8",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'isNumeric("12345"); // true\r\nisNumeric("123a5"); // false\n'})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"totitlecasetext-string-string",children:(0,i.jsx)(n.code,{children:"toTitleCase(text: string): string"})}),"\n",(0,i.jsx)(n.p,{children:"Converts a string to title case (first letter of each word capitalized)."}),"\n",(0,i.jsx)(n.h3,{id:"parameters-9",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": The input string."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"returns-9",children:"Returns:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The string in title case."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-9",children:"Example:"}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'toTitleCase("the quick brown fox"); // "The Quick Brown Fox"\n'})})})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);