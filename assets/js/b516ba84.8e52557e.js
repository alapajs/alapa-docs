"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[826],{4245:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"template/component/props","title":"Properties","description":"Component properties are key-value pairs accessible within the local scope of a component template. They enable customization and dynamic rendering of components. The default properties object is named props, but this can be changed as needed.","source":"@site/docs/template/component/props.mdx","sourceDirName":"template/component","slug":"/template/component/props","permalink":"/docs/template/component/props","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/template/component/props.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Properties"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/template/component/indroduction"},"next":{"title":"Importing Components","permalink":"/docs/template/component/import"}}');var s=t(4848),r=t(8453);const i={sidebar_position:2,title:"Properties"},l="Component Properties",c={},d=[{value:"<strong>Creating a Button Component</strong>",id:"creating-a-button-component",level:2},{value:"<strong>Using the Button Component</strong>",id:"using-the-button-component",level:3},{value:"<strong>Changing the Properties Identifier</strong>",id:"changing-the-properties-identifier",level:3},{value:"Example:",id:"example",level:4},{value:"<strong>Built-in Component Attributes</strong>",id:"built-in-component-attributes",level:2},{value:"<strong>1. Content</strong>",id:"1-content",level:3},{value:"Example:",id:"example-1",level:4},{value:"<strong>2. Attributes</strong>",id:"2-attributes",level:3},{value:"Example:",id:"example-2",level:4},{value:"<strong>3. Raw Attributes</strong>",id:"3-raw-attributes",level:3},{value:"Example:",id:"example-3",level:4},{value:"<strong>Passing Dynamic Values</strong>",id:"passing-dynamic-values",level:2},{value:"<strong>Summary</strong>",id:"summary",level:2}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components},{BrowserWindow:t,CodeScreen:o}=n;return t||h("BrowserWindow",!0),o||h("CodeScreen",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"component-properties",children:(0,s.jsx)(n.strong,{children:"Component Properties"})})}),"\n",(0,s.jsxs)(n.p,{children:["Component properties are key-value pairs accessible within the local scope of a component template. They enable customization and dynamic rendering of components. The default properties object is named ",(0,s.jsx)(n.code,{children:"props"}),", but this can be changed as needed."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-button-component",children:(0,s.jsx)(n.strong,{children:"Creating a Button Component"})}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example of defining a ",(0,s.jsx)(n.code,{children:"button"})," component:"]}),"\n",(0,s.jsx)(o,{title:"views/components/button.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<component Button props>\r\n  <button class="btn" type="{{ props.type }}">\r\n    <Render content />\r\n  </button>\r\n</component>\n'})})}),"\n",(0,s.jsx)(n.h3,{id:"using-the-button-component",children:(0,s.jsx)(n.strong,{children:"Using the Button Component"})}),"\n",(0,s.jsxs)(n.p,{children:["To use the ",(0,s.jsx)(n.code,{children:"button"})," component in another template, such as ",(0,s.jsx)(n.code,{children:"form.html"}),", you can import and render it as follows:"]}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"{% import {Button} from '/components/button'; %}\r\n<X:Button type=\"button\">My Button</X:Button>\n"})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output:"})}),"\n",(0,s.jsx)(t,{src:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<button class="btn" type="button">My Button</button>\n'})})}),"\n",(0,s.jsx)(n.h3,{id:"changing-the-properties-identifier",children:(0,s.jsx)(n.strong,{children:"Changing the Properties Identifier"})}),"\n",(0,s.jsxs)(n.p,{children:["The default properties identifier is ",(0,s.jsx)(n.code,{children:"props"}),", but you can use any valid identifier by specifying it in the component definition."]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,s.jsx)(o,{title:"views/components/button.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<component default Button myProps>\r\n  <button>{{{ myProps.content }}}</button>\r\n</component>\n"})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"built-in-component-attributes",children:(0,s.jsx)(n.strong,{children:"Built-in Component Attributes"})}),"\n",(0,s.jsx)(n.p,{children:"Components include several predefined attributes that provide flexibility and ease of use:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"content"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Represents the inner content of the component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"attributes"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Contains processed attributes of the component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"stringAttributes"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Contains attribute strings of the component"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"1-content",children:(0,s.jsx)(n.strong,{children:"1. Content"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"content"})," property is a shorthand for ",(0,s.jsx)(n.code,{children:"props.content"}),", representing the inner content of the component."]}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"Creating the component:"}),"\n",(0,s.jsx)(o,{title:"views/components/button.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<component default Button props>\r\n  <button class="btn" type="{{ props.type }}">\r\n    <Render content />\r\n  </button>\r\n</component>\n'})})}),"\n",(0,s.jsx)(n.p,{children:"Using the component:"}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"{% import '/components/button'; %}\r\n<X:Button type=\"button\">Click Me!</X:Button>\n"})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output:"})}),"\n",(0,s.jsx)(t,{src:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<button class="btn" type="button">Click Me!</button>\n'})})}),"\n",(0,s.jsx)(n.h3,{id:"2-attributes",children:(0,s.jsx)(n.strong,{children:"2. Attributes"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"attributes"})," property contains processed attributes for the component, useful for passing dynamic values."]}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"Creating the component:"}),"\n",(0,s.jsx)(o,{title:"views/components/button.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<component default Button props>\r\n  <button class="btn" type="{{ attributes.type }}">\r\n    <Render content />\r\n  </button>\r\n</component>\n'})})}),"\n",(0,s.jsx)(n.p,{children:"Using the component:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"{% import Button from '/components/button'; %}\r\n<X:Button type=\"button\">Submit</X:Button>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<button class="btn" type="button">Submit</button>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-raw-attributes",children:(0,s.jsx)(n.strong,{children:"3. Raw Attributes"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"stringAttributes"})," property provides raw strings for directly applying attributes to the component."]}),"\n",(0,s.jsx)(n.h4,{id:"example-3",children:"Example:"}),"\n",(0,s.jsx)(n.p,{children:"Creating the component:"}),"\n",(0,s.jsx)(o,{title:"views/components/button.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'<component default Button props>\r\n  <button class="btn" {{{ props.stringAttributes }}}>\r\n    <Render content />\r\n  </button>\r\n</component>\n'})})}),"\n",(0,s.jsx)(n.p,{children:"Using the component:"}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'{% import Button from \'/components/button\'; %}\r\n\r\n<x:Button id="uniqueButton" type="submit">Send</x:Button>\n'})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output:"})}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<button class="btn" id="uniqueButton" type="submit">Send</button>\n'})})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["When your attribute contains template code, use the ",(0,s.jsx)(n.code,{children:"Render"})," tag to ensure proper content rendering."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"passing-dynamic-values",children:(0,s.jsx)(n.strong,{children:"Passing Dynamic Values"})}),"\n",(0,s.jsxs)(n.p,{children:["To pass dynamic variables as attribute values, use a colon (",(0,s.jsx)(n.code,{children:":"}),") or at symbol (",(0,s.jsx)(n.code,{children:"@"}),") before the attribute name:"]}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import Button from "/components/button"\r\n\r\n{% const addNumber = 1+1  %}\r\n<X:Button :value="addNumber" type="submit">Send</X:Button>\r\n\n'})})}),"\n",(0,s.jsx)(n.p,{children:"You can also use valid expressions:"}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import Button from "/components/button"\r\n\r\n<X:Button :value="1+1" type="submit">Send</X:Button>\r\n<X:Button :value="condition ? true : false" type="submit">Send</X:Button>\r\n<X:Button :value="validMethodName()" type="submit">Send</X:Button>\n'})})}),"\n",(0,s.jsx)(n.p,{children:"Additionally, you can use globally declared variables within your template, typically passed through the context or plugins or native javascript code:"}),"\n",(0,s.jsx)(o,{title:"views/index.html",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import Button from "/components/button"\r\n\r\n<X:Button @value="appName" type="submit">Send</X:Button>\n'})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:(0,s.jsx)(n.strong,{children:"Summary"})}),"\n",(0,s.jsx)(n.p,{children:"Component properties in Alapa enable:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Flexible customization using ",(0,s.jsx)(n.code,{children:"props"})," and its variations."]}),"\n",(0,s.jsxs)(n.li,{children:["Dynamic rendering with ",(0,s.jsx)(n.code,{children:"content"}),", ",(0,s.jsx)(n.code,{children:"attributes"}),", and ",(0,s.jsx)(n.code,{children:"rawAttributes"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Simplified component reuse and integration across templates."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Experiment with these attributes to unlock the full potential of your component design."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);