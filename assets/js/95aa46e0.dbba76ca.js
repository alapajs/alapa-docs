"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[5534],{7616:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"models/overview","title":"Overview","description":"A Model in Alapa represents a class that maps to a database table (or a MongoDB collection, if you\'re using MongoDB).","source":"@site/docs/models/overview.mdx","sourceDirName":"models","slug":"/models/overview","permalink":"/docs/models/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/models/overview.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Authentication","permalink":"/docs/security/login"},"next":{"title":"Find Options","permalink":"/docs/models/find-options"}}');var t=r(4848),o=r(8453);const i={sidebar_position:1,title:"Overview"},a="What is Model?",l={},c=[{value:"Saving a New Record",id:"saving-a-new-record",level:2},{value:"Retrieving Data",id:"retrieving-data",level:2},{value:"Fetch all users",id:"fetch-all-users",level:3},{value:"Fetch a specific user by ID",id:"fetch-a-specific-user-by-id",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{CodeScreen:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"what-is-model",children:"What is Model?"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"Model"})," in Alapa represents a class that maps to a database table (or a MongoDB collection, if you're using MongoDB)."]}),"\n",(0,t.jsxs)(n.p,{children:["To define a model, create a class and decorate it with ",(0,t.jsx)(n.code,{children:"@TableModel()"}),":"]}),"\n",(0,t.jsx)(r,{title:"src/app/models/user.ts",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { Model, PrimaryColumn, Column } from "alapa";\r\n\r\n@TableModel()\r\nexport class Users extends Model {\r\n  @PrimaryColumn()\r\n  id: number;\r\n\r\n  @Column()\r\n  firstName: string;\r\n\r\n  @Column()\r\n  lastName: string;\r\n\r\n  @Column()\r\n  isActive: boolean;\r\n}\n'})})}),"\n",(0,t.jsx)(n.p,{children:"This generates the following database table:"}),"\n",(0,t.jsx)(r,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"+-------------+---------------+----------------------------+\r\n|                           users                          |\r\n+-------------+---------------+----------------------------+\r\n| id          | int(11)       | PRIMARY KEY AUTO_INCREMENT |\r\n| first_name  | varchar(255)  | NOT NULL                   |\r\n| last_name   | varchar(255)  | NOT NULL                   |\r\n| is_active   | boolean       | DEFAULT false              |\r\n+-------------+---------------+----------------------------+\n"})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Every model must have a primary column (",(0,t.jsx)(n.code,{children:"@PrimaryColumn"}),") or an ",(0,t.jsx)(n.code,{children:"ObjectId"})," (when using MongoDB)."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"saving-a-new-record",children:"Saving a New Record"}),"\n",(0,t.jsx)(n.p,{children:"You can create and save a new user like this:"}),"\n",(0,t.jsx)(r,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const user = new Users();\r\nuser.firstName = "John";\r\nuser.lastName = "Doe";\r\nuser.isActive = true;\r\n\r\nawait user.save();\r\nconsole.log(`New User (${user.firstName}) saved successfully.`);\n'})})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"retrieving-data",children:"Retrieving Data"}),"\n",(0,t.jsx)(n.h3,{id:"fetch-all-users",children:"Fetch all users"}),"\n",(0,t.jsx)(r,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const users = await Users.find();\r\n\r\nif (empty(users)) {\r\n  console.log("Users table is empty");\r\n} else {\r\n  console.log(`Users fetched successfully:`, users);\r\n}\n'})})}),"\n",(0,t.jsx)(n.h3,{id:"fetch-a-specific-user-by-id",children:"Fetch a specific user by ID"}),"\n",(0,t.jsx)(r,{title:"src/app/index.ts",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const user = await Users.findOneBy({ id: 1 });\r\n\r\nif (!user) {\r\n  console.log("User not found");\r\n} else {\r\n  console.log(`User (${user.firstName}) fetched successfully`);\r\n}\n'})})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["Alapa Model is built on top of ",(0,t.jsx)(n.a,{href:"https://typeorm.io",children:"TypeORM"}),".\r\nThis documentation focuses primarily on the customizations, new features, and core concepts specific to working with databases in the Alapa project."]}),(0,t.jsxs)(n.p,{children:["For a deeper understanding of how the underlying model works, refer to the official ",(0,t.jsx)(n.a,{href:"https://typeorm.io/docs/getting-started/",children:"TypeORM documentation"}),"."]})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var s=r(6540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);