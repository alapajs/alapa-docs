"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[2371],{8667:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"routing/resourceful","title":"Resource-Based","description":"Resource-based routing in Alapa provides a streamlined way to define CRUD (Create, Read, Update, Delete)","source":"@site/docs/routing/resourceful.mdx","sourceDirName":"routing","slug":"/routing/resourceful","permalink":"/docs/routing/resourceful","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/routing/resourceful.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Resource-Based"},"sidebar":"tutorialSidebar","previous":{"title":"Controller-Based","permalink":"/docs/routing/controller"},"next":{"title":"Getting Started","permalink":"/docs/template/getting-started"}}');var n=o(4848),l=o(8453);const i={sidebar_position:5,title:"Resource-Based"},t="Resource-Based Routing in Alapa",d={},c=[{value:"Introduction to Resource-Based Routing",id:"introduction-to-resource-based-routing",level:2},{value:"Default Resourceful Routes",id:"default-resourceful-routes",level:2},{value:"Implementing a Resourceful Controller",id:"implementing-a-resourceful-controller",level:2},{value:"Example: BookController",id:"example-bookcontroller",level:3},{value:"RestfulResource (or ApiResource)",id:"restfulresource-or-apiresource",level:2},{value:"Example: BookApiController",id:"example-bookapicontroller",level:3},{value:"Registering RestfulResource Routes",id:"registering-restfulresource-routes",level:3},{value:"Using the <code>@Params</code> Decorator",id:"using-the-params-decorator",level:2},{value:"Example: Using <code>@Params</code>",id:"example-using-params",level:3},{value:"ResourcefulOptions Configuration",id:"resourcefuloptions-configuration",level:2},{value:"<code>changeNamesWithVerbs</code>",id:"changenameswithverbs",level:3},{value:"Example:",id:"example",level:4},{value:"<code>paramNames</code>",id:"paramnames",level:3},{value:"Example:",id:"example-1",level:4},{value:"<code>docPrefix</code>",id:"docprefix",level:3},{value:"Example:",id:"example-2",level:4},{value:"<code>createNames</code>",id:"createnames",level:3},{value:"Example:",id:"example-3",level:4},{value:"<code>namePrefix</code>",id:"nameprefix",level:3},{value:"Example:",id:"example-4",level:4},{value:"<code>only</code>",id:"only",level:3},{value:"Example:",id:"example-5",level:4},{value:"<code>except</code>",id:"except",level:3},{value:"Example:",id:"example-6",level:4},{value:"<code>verb</code>",id:"verb",level:3},{value:"Example:",id:"example-7",level:4},{value:"<code>middleware</code>",id:"middleware",level:3},{value:"Example:",id:"example-8",level:4},{value:"<code>mergeMiddleware</code>",id:"mergemiddleware",level:3},{value:"Example:",id:"example-9",level:4},{value:"Best Practices",id:"best-practices",level:2}];function a(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components},{CodeScreen:o}=r;return o||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"resource-based-routing-in-alapa",children:"Resource-Based Routing in Alapa"})}),"\n",(0,n.jsxs)(r.p,{children:["Resource-based routing in Alapa provides a streamlined way to define ",(0,n.jsx)(r.strong,{children:"CRUD (Create, Read, Update, Delete)"}),"\r\noperations for a resource. This approach automatically maps common actions to specific routes, reducing boilerplate\r\ncode and ensuring consistency across your application."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"introduction-to-resource-based-routing",children:"Introduction to Resource-Based Routing"}),"\n",(0,n.jsxs)(r.p,{children:["Resource-based routing is a convention-over-configuration approach that maps HTTP verbs to controller\r\nactions for a specific resource. For example, a ",(0,n.jsx)(r.code,{children:"Book"})," resource might have routes for listing books,\r\nshowing a specific book, creating a new book, updating a book, and deleting a book."]}),"\n",(0,n.jsxs)(r.p,{children:["Alapa simplifies this process by automatically generating these routes when you define a ",(0,n.jsx)(r.strong,{children:"resourceful controller"}),"."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"default-resourceful-routes",children:"Default Resourceful Routes"}),"\n",(0,n.jsx)(r.p,{children:"When you define a resourceful controller, Alapa generates the following routes by default:"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"HTTP Verb"}),(0,n.jsx)(r.th,{children:"URL"}),(0,n.jsx)(r.th,{children:"Action"}),(0,n.jsx)(r.th,{children:"Route Name"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"index"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.index"})}),(0,n.jsx)(r.td,{children:"List all books"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/create"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"create"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.create"})}),(0,n.jsx)(r.td,{children:"Show the form to create a new book"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"POST"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"store"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.store"})}),(0,n.jsx)(r.td,{children:"Store a newly created book"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"show"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.show"})}),(0,n.jsx)(r.td,{children:"Show a specific book"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book/edit"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"edit"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.edit"})}),(0,n.jsx)(r.td,{children:"Show the form to edit a book"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"PUT/PATCH"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"update"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.update"})}),(0,n.jsx)(r.td,{children:"Update a specific book"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"DELETE"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"destroy"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.destroy"})}),(0,n.jsx)(r.td,{children:"Delete a specific book"})]})]})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"implementing-a-resourceful-controller",children:"Implementing a Resourceful Controller"}),"\n",(0,n.jsxs)(r.p,{children:["To implement a resourceful controller, create a class that implements the ",(0,n.jsx)(r.code,{children:"ResourcefulController"})," interface.\r\nEach method in the class corresponds to the actions."]}),"\n",(0,n.jsx)(r.h3,{id:"example-bookcontroller",children:"Example: BookController"}),"\n",(0,n.jsx)(o,{title:"src/app/books/Controller.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { ResourcefulController, Request, Response } from "alapa";\r\nimport { Books } from "../../models/book";\r\n\r\nexport class BooksController implements ResourcefulController {\r\n  // List all books\r\n  async index(req: Request, res: Response) {\r\n    const books = await Books.find();\r\n    res.render("books.index", { books });\r\n  }\r\n\r\n  // Show the form to create a new book (optional)\r\n  create(req: Request, res: Response) {\r\n    res.render("books.create");\r\n  }\r\n\r\n  // Store a newly created book\r\n  async store(req: Request, res: Response) {\r\n    const book = new Books();\r\n    book.title = req.body.title;\r\n    book.author = req.body.author;\r\n    await book.save();\r\n    res.navigate.back("success", "New Book Created Successfully");\r\n  }\r\n\r\n  // Show a specific book\r\n  async show(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      res.render("books.show", { book });\r\n    } else {\r\n      res.render("error.404", { message: "Book not found" });\r\n    }\r\n  }\r\n\r\n  // Show the form to edit a book (optional)\r\n  async edit(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    res.render("books.edit", { book });\r\n  }\r\n\r\n  // Update a specific book\r\n  async update(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      book.title = req.body.title;\r\n      book.author = req.body.author;\r\n      await book.save();\r\n      req.flash("success", "Book updated successfully");\r\n    } else {\r\n      req.flash("error", "Book not found");\r\n    }\r\n    res.navigate.back();\r\n  }\r\n\r\n  // Delete a specific book\r\n  async destroy(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      await book.delete();\r\n      req.flash("success", "Book deleted successfully");\r\n    } else {\r\n      req.flash("error", "Book not found");\r\n    }\r\n    res.navigate.route("books.index");\r\n  }\r\n}\n'})})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"restfulresource-or-apiresource",children:"RestfulResource (or ApiResource)"}),"\n",(0,n.jsxs)(r.p,{children:["For RESTful APIs, Alapa provides a specialized interface called ",(0,n.jsx)(r.code,{children:"RestfulResource"})," (or ",(0,n.jsx)(r.code,{children:"ApiResource"}),"). This interface excludes methods like ",(0,n.jsx)(r.code,{children:"create"})," and ",(0,n.jsx)(r.code,{children:"edit"}),", which are typically used for rendering forms in web applications. Instead, it focuses on the core CRUD operations required for APIs."]}),"\n",(0,n.jsx)(r.h3,{id:"example-bookapicontroller",children:"Example: BookApiController"}),"\n",(0,n.jsx)(o,{title:"src/api/books/Controller.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { RestfulResource, Request, Response } from "alapa";\r\nimport { Books } from "../../models/book";\r\n\r\nexport class BooksController implements RestfulResource {\r\n  // List all books\r\n  async index(req: Request, res: Response) {\r\n    const books = await Books.find();\r\n    res.json(books);\r\n  }\r\n\r\n  // Store a newly created book\r\n  async store(req: Request, res: Response) {\r\n    const book = new Books();\r\n    book.title = req.body.title;\r\n    book.author = req.body.author;\r\n    await book.save();\r\n    res.status(201).json(book);\r\n  }\r\n\r\n  // Show a specific book\r\n  async show(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      res.json(book);\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n\r\n  // Update a specific book\r\n  async update(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      book.title = req.body.title;\r\n      book.author = req.body.author;\r\n      await book.save();\r\n      res.json(book);\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n\r\n  // Delete a specific book\r\n  async destroy(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      await book.delete();\r\n      res.status(204).send();\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n}\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"registering-restfulresource-routes",children:"Registering RestfulResource Routes"}),"\n",(0,n.jsx)(o,{title:"src/app/api/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BooksController } from "./ApiController";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.restResource("books", BookApiController);\r\n// OR\r\nbookRoutes.apiResource("books", BookApiController);\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsx)(r.p,{children:"This will generate the following routes:"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"HTTP Verb"}),(0,n.jsx)(r.th,{children:"URL"}),(0,n.jsx)(r.th,{children:"Action"}),(0,n.jsx)(r.th,{children:"Route Name"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"index"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.index"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"POST"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"store"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.store"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"GET"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"show"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.show"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"PUT/PATCH"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"update"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.update"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"DELETE"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"/books/:book"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"destroy"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"books.destroy"})})]})]})]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsxs)(r.h2,{id:"using-the-params-decorator",children:["Using the ",(0,n.jsx)(r.code,{children:"@Params"})," Decorator"]}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"@Params"})," decorator is used to define dynamic segments in your routes. It allows you to specify the parameter names for resourceful routes."]}),"\n",(0,n.jsxs)(r.h3,{id:"example-using-params",children:["Example: Using ",(0,n.jsx)(r.code,{children:"@Params"})]}),"\n",(0,n.jsx)(o,{title:"src/app/books/Controller.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { ResourcefulController, Request, Response, Params } from "alapa";\r\nimport { Books } from "../../models/book";\r\n\r\nexport class BookController implements ResourcefulController {\r\n  // /books/:book/:author\r\n  @Params("author") // Define the parameter name\r\n  async show(req: Request, res: Response) {\r\n    const book = await Books.findOneBy({ id: req.params.book });\r\n    if (book) {\r\n      res.render("books.show", { book });\r\n    } else {\r\n      res.navigate.back().withErrors("Book not found");\r\n    }\r\n  }\r\n}\n'})})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"resourcefuloptions-configuration",children:"ResourcefulOptions Configuration"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"ResourcefulOptions"})," interface provides a wide range of options to customize resourceful routes. Below is a detailed breakdown of these options with examples:"]}),"\n",(0,n.jsx)(r.h3,{id:"changenameswithverbs",children:(0,n.jsx)(r.code,{children:"changeNamesWithVerbs"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Default"}),": ",(0,n.jsx)(r.code,{children:"true"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Whether to change route names to use the provided verb names."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  changeNamesWithVerbs: false, // Use the default route names\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"paramnames",children:(0,n.jsx)(r.code,{children:"paramNames"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"string"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Custom parameter names for dynamic segments in the route."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-1",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  paramNames: "id", // Use `id` instead of `book` in the route\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"docprefix",children:(0,n.jsx)(r.code,{children:"docPrefix"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"string"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Prefix added to the API documentation path."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-2",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  docPrefix: "api/v1", // Add a prefix to API documentation paths\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"createnames",children:(0,n.jsx)(r.code,{children:"createNames"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Default"}),": ",(0,n.jsx)(r.code,{children:"true"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Whether to create route names for create actions."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-3",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  createNames: false, // Don\'t create route names\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"nameprefix",children:(0,n.jsx)(r.code,{children:"namePrefix"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"string"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Prefix added to route names."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-4",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  namePrefix: "app-books", // Add a prefix to route names\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"only",children:(0,n.jsx)(r.code,{children:"only"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"string[] | string"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Specify which routes to include."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-5",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  only: ["index", "show"], // Only include index and show routes\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"except",children:(0,n.jsx)(r.code,{children:"except"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"string[] | string"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Specify which routes to exclude."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-6",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  except: ["create", "edit"], // Exclude create and edit routes\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"verb",children:(0,n.jsx)(r.code,{children:"verb"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"ResourcefulVerb"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Custom verb names for resourceful routes."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-7",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  verb: {\r\n    index: "list", // Use "list" instead of "index"\r\n    show: "detail", // Use "detail" instead of "show"\r\n  },\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"middleware",children:(0,n.jsx)(r.code,{children:"middleware"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"ResourcefulMiddleware"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Middleware functions for resourceful routes."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-8",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  middleware: {\r\n    index: [authMiddleware], // Apply middleware to the index action\r\n    store: [logMiddleware], // Apply middleware to the store action\r\n  },\r\n});\n'})})}),"\n",(0,n.jsx)(r.h3,{id:"mergemiddleware",children:(0,n.jsx)(r.code,{children:"mergeMiddleware"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Type"}),": ",(0,n.jsx)(r.code,{children:"boolean"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Default"}),": ",(0,n.jsx)(r.code,{children:"false"})]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Whether to merge a single route middleware with the ",(0,n.jsx)(r.code,{children:"before"})," middleware."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"example-9",children:"Example:"}),"\n",(0,n.jsx)(o,{title:"src/app/books/router.ts",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { BooksController } from "./ApiController";\r\n\r\nbookRoutes.resource("books", BooksController, {\r\n  middleware: {\r\n    before: [authMiddleware], // Apply middleware before all actions\r\n    index: [logMiddleware], // Apply middleware to the index action\r\n  },\r\n  mergeMiddleware: true, // Merge middleware for index with before middleware\r\n});\n'})})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Use Meaningful Resource Names"}),": Choose resource names that clearly describe the entity (e.g., ",(0,n.jsx)(r.code,{children:"books"}),", ",(0,n.jsx)(r.code,{children:"users"}),")."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Keep Controllers Focused"}),": Each controller should handle a single resource."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Leverage Middleware"}),": Use middleware for cross-cutting concerns like authentication and logging."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Document Your API"}),": Use OpenAPI decorators to document your routes."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Test Your Routes"}),": Write unit and integration tests for your resourceful routes."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>t});var s=o(6540);const n={},l=s.createContext(n);function i(e){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(l.Provider,{value:r},e.children)}}}]);