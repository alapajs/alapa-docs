"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[9983],{7938:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"get-started/directory-structure","title":"Directory Structure","description":"When you generate a new Alapa project using the command npx create-alapa-app [ProjectName], you\u2019ll get a well-organized and modular directory structure designed to make development intuitive, scalable, and maintainable. Below is a detailed breakdown of the key directories and files in an Alapa starter project:","source":"@site/docs/get-started/directory-structure.mdx","sourceDirName":"get-started","slug":"/get-started/directory-structure","permalink":"/docs/get-started/directory-structure","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/get-started/directory-structure.mdx","tags":[],"version":"current","frontMatter":{"title":"Directory Structure"},"sidebar":"tutorialSidebar","previous":{"title":"Alapa Installation","permalink":"/docs/get-started/installation"},"next":{"title":"Basic Routing","permalink":"/docs/routing/basic"}}');var i=s(4848),t=s(8453);const o={title:"Directory Structure"},c="Alapa Directory Structure",d={},l=[{value:"<strong>Root Directory (<code>/</code>)</strong>",id:"root-directory-",level:3},{value:"<strong>Development Tools (<code>/dev</code>)</strong>",id:"development-tools-dev",level:3},{value:"<strong>Documentation (<code>/docs</code>)</strong>",id:"documentation-docs",level:3},{value:"<strong>Database Migrations (<code>/migration-runner</code>)</strong>",id:"database-migrations-migration-runner",level:3},{value:"<strong>Public (<code>/public</code>)</strong>",id:"public-public",level:3},{value:"<strong>Source Code (<code>/src</code>)</strong>",id:"source-code-src",level:3},{value:"<strong>Static Files (<code>/static</code>)</strong>",id:"static-files-static",level:3},{value:"<strong>Testing (<code>/test</code>)</strong>",id:"testing-test",level:3},{value:"<strong>Views (<code>/views</code>)</strong>",id:"views-views",level:3},{value:"<strong>Other Files and Directories</strong>",id:"other-files-and-directories",level:3},{value:"<strong>Why This Structure?</strong>",id:"why-this-structure",level:3},{value:"<strong>Getting Started</strong>",id:"getting-started",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{CodeScreen:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"alapa-directory-structure",children:(0,i.jsx)(n.strong,{children:"Alapa Directory Structure"})})}),"\n",(0,i.jsxs)(n.p,{children:["When you generate a new Alapa project using the command ",(0,i.jsx)(n.code,{children:"npx create-alapa-app [ProjectName]"}),", you\u2019ll get a well-organized and modular directory structure designed to make development intuitive, scalable, and maintainable. Below is a detailed breakdown of the key directories and files in an Alapa starter project:"]}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/\r\n\u251c\u2500\u2500 dev/\r\n\u2502   \u251c\u2500\u2500 index.js\r\n\u2502   \u2514\u2500\u2500 refresh.js\r\n\u251c\u2500\u2500 docs/\r\n\u2502   \u251c\u2500\u2500 generate.ts\r\n\u2502   \u2514\u2500\u2500 schemas/\r\n\u251c\u2500\u2500 migration-runner/\r\n\u2502   \u251c\u2500\u2500 data-source.ts\r\n\u2502   \u251c\u2500\u2500 generate.ts\r\n\u2502   \u2514\u2500\u2500 run.ts\r\n\u251c\u2500\u2500 public/\r\n\u2502   \u251c\u2500\u2500 src/\r\n\u2502   \u251c\u2500\u2500 styles/\r\n\u2502   \u2514\u2500\u2500 application.scss\r\n\u251c\u2500\u2500 src/\r\n\u2502   \u251c\u2500\u2500 index.ts\r\n\u2502   \u251c\u2500\u2500 api/\r\n\u2502   \u2502   \u251c\u2500\u2500 routes.ts\r\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\r\n\u2502   \u251c\u2500\u2500 apps/\r\n\u2502   \u2502   \u251c\u2500\u2500 routes.ts\r\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\r\n\u2502   \u251c\u2500\u2500 config/\r\n\u2502   \u251c\u2500\u2500 models/\r\n\u2502   \u2502   \u2514\u2500\u2500 user.ts\r\n\u2502   \u2514\u2500\u2500 shared/\r\n\u2502       \u2514\u2500\u2500 index.ts\r\n\u251c\u2500\u2500 static/\r\n\u2502   \u251c\u2500\u2500 images/\r\n\u2502   \u251c\u2500\u2500 js/\r\n\u2502   \u2502   \u2514\u2500\u2500 app.js\r\n\u2502   \u251c\u2500\u2500 css/\r\n\u2502   \u2502   \u251c\u2500\u2500 app.css\r\n\u2502   \u2502   \u2514\u2500\u2500 styles.css\r\n\u251c\u2500\u2500 test/\r\n\u251c\u2500\u2500 node_modules/\r\n\u251c\u2500\u2500 views/\r\n\u2502   \u251c\u2500\u2500 components/\r\n\u2502   \u251c\u2500\u2500 error/\r\n\u2502   \u2514\u2500\u2500 index.html\r\n\u251c\u2500\u2500 .env\r\n\u251c\u2500\u2500 Dockerfile\r\n\u251c\u2500\u2500 alapa-env.d.ts\r\n\u251c\u2500\u2500 eslint.config.mjs\r\n\u251c\u2500\u2500 package.json\r\n\u251c\u2500\u2500 package-lock.json\r\n\u251c\u2500\u2500 postcss.config.js\r\n\u251c\u2500\u2500 readme.md\r\n\u251c\u2500\u2500 tailwind.config.js\r\n\u2514\u2500\u2500 tsconfig.json\n"})})}),"\n",(0,i.jsx)(n.h3,{id:"root-directory-",children:(0,i.jsxs)(n.strong,{children:["Root Directory (",(0,i.jsx)(n.code,{children:"/"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"The root directory contains configuration files, environment settings, and project metadata. Here\u2019s what you\u2019ll find:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".env"})}),": Stores environment variables such as API keys, database credentials, and other sensitive or environment-specific settings."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Dockerfile"})}),": Defines the Docker image configuration for containerizing the application."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"alapa-env.d.ts"})}),": A TypeScript declaration file for environment variables or custom types."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"eslint.config.mjs"})}),": Configuration file for ESLint, ensuring code quality and consistency."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"package.json"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"package-lock.json"})}),": Define project dependencies, scripts, and metadata."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"postcss.config.js"})}),": Configuration for PostCSS, used for processing CSS with plugins like Tailwind CSS."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"readme.md"})}),": Documentation for the project, including setup instructions, usage, and other relevant information."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tailwind.config.js"})}),": Configuration file for Tailwind CSS, a utility-first CSS framework."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tsconfig.json"})}),": TypeScript configuration file, defining compiler options and project settings."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"development-tools-dev",children:(0,i.jsxs)(n.strong,{children:["Development Tools (",(0,i.jsx)(n.code,{children:"/dev"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"This directory contains scripts and tools for development purposes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index.js"})}),": The entry point for development-specific scripts or tools."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"refresh.js"})}),": A script to refresh browsers on changes."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"documentation-docs",children:(0,i.jsxs)(n.strong,{children:["Documentation (",(0,i.jsx)(n.code,{children:"/docs"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"Alapa\u2019s documentation is generated and maintained here:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"generate.ts"})}),": A script for generating API documentation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"schemas/"})}),": Contains schema definitions (e.g., ",(0,i.jsx)(n.code,{children:"user.yaml"}),") for reference in your API documentation."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"database-migrations-migration-runner",children:(0,i.jsxs)(n.strong,{children:["Database Migrations (",(0,i.jsx)(n.code,{children:"/migration-runner"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"This directory handles database migrations, ensuring smooth schema updates:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"data-source.ts"})}),": Configuration for database migrations, likely using an ORM like TypeORM."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"generate.ts"})}),": A script to generate new database migrations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"run.ts"})}),": A script to execute database migrations."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"public-public",children:(0,i.jsxs)(n.strong,{children:["Public (",(0,i.jsx)(n.code,{children:"/public"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"This directory contains assets that are compiled using Webpack to generate static files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"src/"})}),": Contains source files for public assets (e.g., JavaScript, CSS, TypeScript)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"styles/"})}),": Stores stylesheets, including preprocessed SCSS files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"application.scss"})}),": The main SCSS file for global styles."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"source-code-src",children:(0,i.jsxs)(n.strong,{children:["Source Code (",(0,i.jsx)(n.code,{children:"/src"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"The core of the Alapa application, organized into modules for better maintainability:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index.ts"})}),": The main entry point of the application. This file initializes and starts the Alapa application, tying together all the modules and configurations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"api/"})}),": Contains API-related logic.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"routes.ts"})}),": Defines API routes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index.ts"})}),": Entry point for the API module."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apps/"})}),": Houses application-specific logic or sub-applications.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"routes.ts"})}),": Defines routes for the application."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index.ts"})}),": Entry point for the application module."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"config/"})}),": Houses configuration files for various aspects of the application. Files like api.ts, database.ts, auth.ts, etc., provide modular configuration for APIs, databases, authentication, and more."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"models/"})}),": Contains data models, such as ",(0,i.jsx)(n.code,{children:"user.ts"}),", defining the structure and behavior of database entities."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"shared/"})}),": Stores shared utilities, helpers, or common functionality used across the application."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"static-files-static",children:(0,i.jsxs)(n.strong,{children:["Static Files (",(0,i.jsx)(n.code,{children:"/static"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"Static files like images, JavaScript, and CSS are organized here:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"images/"})}),": Stores static image assets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"js/"})}),": Contains JavaScript files, such as ",(0,i.jsx)(n.code,{children:"app.js"}),", for client-side functionality."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"css/"})}),": Houses CSS files, including ",(0,i.jsx)(n.code,{children:"app.css"})," and ",(0,i.jsx)(n.code,{children:"styles.css"}),", for styling the application."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"testing-test",children:(0,i.jsxs)(n.strong,{children:["Testing (",(0,i.jsx)(n.code,{children:"/test"}),")"]})}),"\n",(0,i.jsx)(n.p,{children:"This directory is reserved for test files (e.g., unit tests, integration tests) to ensure the application functions as expected. (Note: This directory is currently empty but is typically used for testing purposes.)"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"views-views",children:(0,i.jsxs)(n.strong,{children:["Views (",(0,i.jsx)(n.code,{children:"/views"}),")"]})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"views"})," directory is used for server-side rendering or templating:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"components/"})}),": Stores reusable UI components."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"error/"})}),": Contains error pages (e.g., 404, 500)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"index.html"})}),": The main HTML file for the application\u2019s front end."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"other-files-and-directories",children:(0,i.jsx)(n.strong,{children:"Other Files and Directories"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"node_modules/"})}),": Contains installed dependencies managed by npm or Yarn."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"why-this-structure",children:(0,i.jsx)(n.strong,{children:"Why This Structure?"})}),"\n",(0,i.jsx)(n.p,{children:"Alapa\u2019s directory structure is designed with the following principles in mind:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modularity"}),": Separating concerns (e.g., ",(0,i.jsx)(n.code,{children:"api/"}),", ",(0,i.jsx)(n.code,{children:"apps/"}),", ",(0,i.jsx)(n.code,{children:"models/"}),") makes the codebase easier to maintain and scale."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibility"}),": The ",(0,i.jsx)(n.code,{children:"config/"})," directory allows developers to add custom configurations as needed, ensuring the structure adapts to the project\u2019s requirements."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Static Assets"}),": The ",(0,i.jsx)(n.code,{children:"static/"})," and ",(0,i.jsx)(n.code,{children:"public/"})," directories ensure that static files like CSS, JavaScript, and images are organized and accessible."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation and Tooling"}),": The ",(0,i.jsx)(n.code,{children:"docs/"})," and ",(0,i.jsx)(n.code,{children:"dev/"})," directories highlight a focus on documentation and development tooling."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TypeScript Support"}),": The presence of TypeScript files (",(0,i.jsx)(n.code,{children:"*.ts"}),") and ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," ensures strong typing and modern JavaScript practices."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getting-started",children:(0,i.jsx)(n.strong,{children:"Getting Started"})}),"\n",(0,i.jsx)(n.p,{children:"To explore Alapa\u2019s directory structure in action, generate a new project using the command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx create-alapa-app [ProjectName]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will create a starter project with the above structure, ready for you to customize and build upon. Each directory is designed to be self-explanatory, making it easy for developers to understand and contribute to the project."}),"\n",(0,i.jsxs)(n.p,{children:["For more details on how to use Alapa, check out the ",(0,i.jsx)(n.a,{href:"installation",children:"Installation Guide"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"This structure reflects Alapa\u2019s commitment to simplicity, flexibility, and developer productivity. Whether you\u2019re building a small project or a large-scale application, Alapa\u2019s organized approach ensures a smooth development experience."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);