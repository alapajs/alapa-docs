"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[4287],{2838:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"models/find-options","title":"Find Options","description":"Basic Options","source":"@site/docs/models/find-options.mdx","sourceDirName":"models","slug":"/models/find-options","permalink":"/docs/models/find-options","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/models/find-options.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Find Options"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/models/overview"},"next":{"title":"Fillable and Guarded Fields","permalink":"/docs/models/field-controls-and-data-operations/fillable-guards-fields"}}');var l=s(4848),i=s(8453);const d={sidebar_position:2,title:"Find Options"},c=void 0,o={},a=[{value:"Basic Options",id:"basic-options",level:2},{value:"\ud83d\udd39 <code>select</code> \u2013 Select Specific Columns",id:"-select--select-specific-columns",level:3},{value:"\ud83d\udd39 <code>relations</code> \u2013 Load Related Entities",id:"-relations--load-related-entities",level:3},{value:"\ud83d\udd39 <code>where</code> \u2013 Filter Conditions",id:"-where--filter-conditions",level:3},{value:"\ud83d\udd39 <code>order</code> \u2013 Sorting Results",id:"-order--sorting-results",level:3},{value:"\ud83d\udd39 <code>withDeleted</code> \u2013 Include Soft Deleted Entities",id:"-withdeleted--include-soft-deleted-entities",level:3},{value:"\ud83d\udd39 <code>skip</code> and <code>take</code> \u2013 Pagination",id:"-skip-and-take--pagination",level:3},{value:"\ud83d\udd39 <code>cache</code> \u2013 Enable Caching",id:"-cache--enable-caching",level:3},{value:"\ud83d\udd39 <code>lock</code> \u2013 Query Locking (Only in <code>findOne</code> / <code>findOneBy</code>)",id:"-lock--query-locking-only-in-findone--findoneby",level:3},{value:"\ud83d\udd39 Full Example",id:"-full-example",level:3},{value:"\ud83d\udd39 Find Without Arguments",id:"-find-without-arguments",level:3},{value:"Advanced options",id:"advanced-options",level:2},{value:"\ud83d\udd39 <code>Not</code>",id:"-not",level:3},{value:"\ud83d\udd39 <code>LessThan</code>",id:"-lessthan",level:3},{value:"\ud83d\udd39 <code>LessThanOrEqual</code>",id:"-lessthanorequal",level:3},{value:"\ud83d\udd39 <code>MoreThan</code>",id:"-morethan",level:3},{value:"\ud83d\udd39 <code>MoreThanOrEqual</code>",id:"-morethanorequal",level:3},{value:"\ud83d\udd39 <code>Equal</code>",id:"-equal",level:3},{value:"\ud83d\udd39 <code>Like</code>",id:"-like",level:3},{value:"\ud83d\udd39 <code>ILike</code>",id:"-ilike",level:3},{value:"\ud83d\udd39 <code>Between</code>",id:"-between",level:3},{value:"\ud83d\udd39 <code>In</code>",id:"-in",level:3},{value:"\ud83d\udd39 <code>Any</code>",id:"-any",level:3},{value:"\ud83d\udd39 <code>IsNull</code>",id:"-isnull",level:3},{value:"\ud83d\udd39 <code>ArrayContains</code>",id:"-arraycontains",level:3},{value:"\ud83d\udd39 <code>ArrayContainedBy</code>",id:"-arraycontainedby",level:3},{value:"\ud83d\udd39 <code>ArrayOverlap</code>",id:"-arrayoverlap",level:3},{value:"\ud83d\udd39 <code>Raw</code>",id:"-raw",level:3},{value:"Combining Advanced Options",id:"combining-advanced-options",level:2},{value:"\ud83d\udd39 <code>Not</code>",id:"-not-1",level:3},{value:"\ud83d\udd39 <code>Or</code>",id:"-or",level:3},{value:"\ud83d\udd39 <code>And</code>",id:"-and",level:3}];function t(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{CodeScreen:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"basic-options",children:"Basic Options"}),"\n",(0,l.jsxs)(n.p,{children:["All Model",(0,l.jsx)(n.code,{children:".find*"})," methods accept special options to query data without using ",(0,l.jsx)(n.code,{children:"QueryBuilder"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-select--select-specific-columns",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"select"})," \u2013 Select Specific Columns"]}),"\n",(0,l.jsx)(n.p,{children:"Indicates which properties of the main object must be selected."}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  select: {\r\n    firstName: true,\r\n    lastName: true,\r\n  },\r\n});\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT "firstName", "lastName" FROM "users"\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-relations--load-related-entities",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"relations"})," \u2013 Load Related Entities"]}),"\n",(0,l.jsxs)(n.p,{children:["Loads related entities (shorthand for ",(0,l.jsx)(n.code,{children:"join"})," / ",(0,l.jsx)(n.code,{children:"leftJoinAndSelect"}),")."]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  relations: {\r\n    profile: true,\r\n    photos: true,\r\n    videos: true,\r\n  },\r\n});\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  relations: {\r\n    profile: true,\r\n    photos: true,\r\n    videos: {\r\n      videoAttributes: true,\r\n    },\r\n  },\r\n});\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nLEFT JOIN "profile" ON "profile"."id" = "users"."profileId"\r\nLEFT JOIN "photos" ON "photos"."id" = "users"."photoId"\r\nLEFT JOIN "videos" ON "videos"."id" = "users"."videoId"\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nLEFT JOIN "profile" ON "profile"."id" = "users"."profileId"\r\nLEFT JOIN "photos" ON "photos"."id" = "users"."photoId"\r\nLEFT JOIN "videos" ON "videos"."id" = "users"."videoId"\r\nLEFT JOIN "video_attributes" ON "video_attributes"."id" = "videos"."video_attributesId"\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-where--filter-conditions",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"where"})," \u2013 Filter Conditions"]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  where: {\r\n    firstName: "Timber",\r\n    lastName: "Saw",\r\n  },\r\n});\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nWHERE "firstName" = \'Timber\' AND "lastName" = \'Saw\'\n'})})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Embedded entity condition:"})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  relations: {\r\n    project: true,\r\n  },\r\n  where: {\r\n    project: {\r\n      name: "TypeORM",\r\n      initials: "TORM",\r\n    },\r\n  },\r\n});\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nLEFT JOIN "project" ON "project"."id" = "users"."projectId"\r\nWHERE "project"."name" = \'TypeORM\' AND "project"."initials" = \'TORM\'\n'})})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"OR condition:"})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  where: [\r\n    { firstName: "Timber", lastName: "Saw" },\r\n    { firstName: "Stan", lastName: "Lee" },\r\n  ],\r\n});\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nWHERE ("firstName" = \'Timber\' AND "lastName" = \'Saw\')\r\n   OR ("firstName" = \'Stan\' AND "lastName" = \'Lee\')\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-order--sorting-results",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"order"})," \u2013 Sorting Results"]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  order: {\r\n    name: "ASC",\r\n    id: "DESC",\r\n  },\r\n});\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nORDER BY "name" ASC, "id" DESC\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-withdeleted--include-soft-deleted-entities",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"withDeleted"})," \u2013 Include Soft Deleted Entities"]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  withDeleted: true,\r\n});\n"})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-skip-and-take--pagination",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"skip"})," and ",(0,l.jsx)(n.code,{children:"take"})," \u2013 Pagination"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.code,{children:"skip"}),":"]})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  skip: 5,\r\n});\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nOFFSET 5\n'})})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.code,{children:"take"}),":"]})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  take: 10,\r\n});\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nLIMIT 10\n'})})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,l.jsx)(n.code,{children:"skip"})," and ",(0,l.jsx)(n.code,{children:"take"})," should be used together for pagination."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["For MSSQL (requires ",(0,l.jsx)(n.code,{children:"order"}),"):"]})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  order: {\r\n    columnName: "ASC",\r\n  },\r\n  skip: 0,\r\n  take: 10,\r\n});\n'})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\r\nORDER BY "columnName" ASC\r\nLIMIT 10 OFFSET 0\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-cache--enable-caching",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"cache"})," \u2013 Enable Caching"]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find({\r\n  cache: true,\r\n});\n"})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-lock--query-locking-only-in-findone--findoneby",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"lock"})," \u2013 Query Locking (Only in ",(0,l.jsx)(n.code,{children:"findOne"})," / ",(0,l.jsx)(n.code,{children:"findOneBy"}),")"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Optimistic Lock:"})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.findOne({\r\n  where: {\r\n    id: 1,\r\n  },\r\n  lock: { mode: "optimistic", version: 1 },\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Pessimistic Lock (Structure):"})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'{\r\n  mode: "pessimistic_read" |\r\n        "pessimistic_write" |\r\n        "dirty_read" |\r\n        "pessimistic_partial_write" | // Deprecated\r\n        "pessimistic_write_or_fail" | // Deprecated\r\n        "for_no_key_update" |\r\n        "for_key_share",\r\n  tables: string[],\r\n  onLocked: "nowait" | "skip_locked"\r\n}\n'})})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["\ud83d\udcd6 See ",(0,l.jsx)(n.a,{href:"https://typeorm.io/docs/query-builder/select-query-builder#lock-modes",children:"lock modes"})," for more details."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-full-example",children:"\ud83d\udd39 Full Example"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'Users.find({\r\n  select: {\r\n    firstName: true,\r\n    lastName: true,\r\n  },\r\n  relations: {\r\n    profile: true,\r\n    photos: true,\r\n    videos: true,\r\n  },\r\n  where: {\r\n    firstName: "Timber",\r\n    lastName: "Saw",\r\n    profile: {\r\n      userName: "tshaw",\r\n    },\r\n  },\r\n  order: {\r\n    name: "ASC",\r\n    id: "DESC",\r\n  },\r\n  skip: 5,\r\n  take: 10,\r\n  cache: true,\r\n});\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"-find-without-arguments",children:"\ud83d\udd39 Find Without Arguments"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"Users.find();\n"})})}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "users"\n'})})}),"\n",(0,l.jsx)(n.h2,{id:"advanced-options",children:"Advanced options"}),"\n",(0,l.jsx)(n.p,{children:"Alapa Model provides a lot of built-in operators that can be used to create more complex comparisons:"}),"\n",(0,l.jsxs)(n.h3,{id:"-not",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Not"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Not } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Not("About #1"),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" != \'About #1\'\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"-lessthan",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"LessThan"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { LessThan } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: LessThan(10),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" < 10\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-lessthanorequal",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"LessThanOrEqual"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { LessThanOrEqual } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: LessThanOrEqual(10),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" <= 10\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-morethan",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"MoreThan"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { MoreThan } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: MoreThan(10),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" > 10\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-morethanorequal",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"MoreThanOrEqual"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { MoreThanOrEqual } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: MoreThanOrEqual(10),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" >= 10\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-equal",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Equal"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Equal } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Equal("About #2"),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" = \'About #2\'\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-like",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Like"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Like } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Like("%out #%"),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" LIKE \'%out #%\'\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-ilike",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"ILike"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { ILike } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: ILike("%out #%"),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" ILIKE \'%out #%\'\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-between",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Between"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Between } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: Between(1, 10),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" BETWEEN 1 AND 10\n'})})}),"\n",(0,l.jsxs)(n.h3,{id:"-in",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"In"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { In } from "alapa";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: In(["About #2", "About #3"]),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM \"posts\" WHERE \"title\" IN ('About #2','About #3')\n"})})}),"\n",(0,l.jsxs)(n.h3,{id:"-any",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Any"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Any } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Any(["About #2", "About #3"]),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM \"posts\" WHERE \"title\" = ANY(['About #2','About #3'])\n"})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-isnull",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"IsNull"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { IsNull } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: IsNull(),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" IS NULL\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-arraycontains",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"ArrayContains"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { ArrayContains } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  categories: ArrayContains(["TypeScript"]),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "categories" @> \'{TypeScript}\'\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-arraycontainedby",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"ArrayContainedBy"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { ArrayContainedBy } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  categories: ArrayContainedBy(["TypeScript"]),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "categories" <@ \'{TypeScript}\'\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-arrayoverlap",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"ArrayOverlap"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { ArrayOverlap } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  categories: ArrayOverlap(["TypeScript"]),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "categories" && \'{TypeScript}\'\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-raw",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Raw"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Raw } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: Raw("dislikes - 4"),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "likes" = "dislikes" - 4\n'})})}),"\n",(0,l.jsx)(n.p,{children:"In the simplest case, a raw query is inserted immediately after the equal symbol.\r\nBut you can also completely rewrite the comparison logic using the function."}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Raw } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  currentDate: Raw((alias) => `${alias} > NOW()`),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "currentDate" > NOW()\n'})})}),"\n",(0,l.jsxs)(n.p,{children:["If you need to provide user input, you should not include the user input directly in your query as this may create a SQL injection vulnerability. Instead, you can use the second argument of the ",(0,l.jsx)(n.code,{children:"Raw"})," function to provide a list of parameters to bind to the query."]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Raw } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  currentDate: Raw((alias) => `${alias} > :date`, { date: "2020-10-06" }),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "currentDate" > \'2020-10-06\'\n'})})}),"\n",(0,l.jsx)(n.p,{children:"If you need to provide user input that is an array, you can bind them as a list of values in the SQL statement by using the special expression syntax:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Raw } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Raw((alias) => `${alias} IN (:...titles)`, {\r\n    titles: ["Go To Statement Considered Harmful", "Structured Programming"],\r\n  }),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM \"posts\" WHERE \"title\" IN ('Go To Statement Considered Harmful', 'Structured Programming')\n"})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"combining-advanced-options",children:"Combining Advanced Options"}),"\n",(0,l.jsx)(n.p,{children:"Also you can combine these operators with below:"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-not-1",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Not"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Not, MoreThan, Equal } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  likes: Not(MoreThan(10)),\r\n  title: Not(Equal("About #2")),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE NOT("likes" > 10) AND NOT("title" = \'About #2\')\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-or",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"Or"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { Or, Equal, ILike } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: Or(Equal("About #2"), ILike("About%")),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE "title" = \'About #2\' OR "title" ILIKE \'About%\'\n'})})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"-and",children:["\ud83d\udd39 ",(0,l.jsx)(n.code,{children:"And"})]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:'import { And, Not, Equal, ILike } from "typeorm";\r\n\r\nconst loadedPosts = await Posts.findBy({\r\n  title: And(Not(Equal("About #2")), ILike("%About%")),\r\n});\n'})})}),"\n",(0,l.jsx)(n.p,{children:"will execute following query:"}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'SELECT * FROM "posts" WHERE NOT("title" = \'About #2\') AND "title" ILIKE \'%About%\'\n'})})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(6540);const l={},i=r.createContext(l);function d(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);