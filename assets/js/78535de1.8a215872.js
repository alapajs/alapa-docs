"use strict";(self.webpackChunkalapa_doc=self.webpackChunkalapa_doc||[]).push([[2371],{8552:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"routing/resourceful","title":"Resource","description":"Resource-based routing in Alapa provides a streamlined way to define CRUD (Create, Read, Update, Delete) operations for a resource. This approach automatically maps common actions to specific routes, reducing boilerplate code and ensuring consistency across your application.","source":"@site/docs/routing/resourceful.mdx","sourceDirName":"routing","slug":"/routing/resourceful","permalink":"/docs/routing/resourceful","draft":false,"unlisted":false,"editUrl":"https://github.com/alapajs/alapa-docs/tree/main/docs/routing/resourceful.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Resource"},"sidebar":"tutorialSidebar","previous":{"title":"Controller","permalink":"/docs/routing/controller"},"next":{"title":"Getting Started","permalink":"/docs/template/getting-started"}}');var n=r(4848),t=r(8453);const l={sidebar_position:6,title:"Resource"},d="Resource-Based Routing in Alapa",i={},c=[{value:"Introduction to Resource-Based Routing",id:"introduction-to-resource-based-routing",level:2},{value:"Default Resourceful Routes",id:"default-resourceful-routes",level:2},{value:"Implementing a Resource Controller",id:"implementing-a-resource-controller",level:2},{value:"Example: BookController",id:"example-bookcontroller",level:3},{value:"Registering Resourceful Routes",id:"registering-resourceful-routes",level:2},{value:"Example: Registering Routes",id:"example-registering-routes",level:3},{value:"Customizing Resourceful Routes",id:"customizing-resourceful-routes",level:2},{value:"Example: Excluding Routes",id:"example-excluding-routes",level:3},{value:"Example: Adding Additional Routes",id:"example-adding-additional-routes",level:3},{value:"Middleware for Resourceful Routes",id:"middleware-for-resourceful-routes",level:2},{value:"Example: Global Middleware",id:"example-global-middleware",level:3},{value:"Example: Route-Specific Middleware",id:"example-route-specific-middleware",level:3},{value:"OpenAPI Documentation for Resourceful Routes",id:"openapi-documentation-for-resourceful-routes",level:2},{value:"Example: Documenting Resourceful Routes",id:"example-documenting-resourceful-routes",level:3},{value:"Controller Configuration Options",id:"controller-configuration-options",level:2},{value:"Example: Using <code>namePrefix</code>",id:"example-using-nameprefix",level:3},{value:"Example: Using <code>docPrefix</code>",id:"example-using-docprefix",level:3},{value:"Best Practices",id:"best-practices",level:2}];function a(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{CodeScreen:r}=o;return r||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("CodeScreen",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"resource-based-routing-in-alapa",children:"Resource-Based Routing in Alapa"})}),"\n",(0,n.jsxs)(o.p,{children:["Resource-based routing in Alapa provides a streamlined way to define ",(0,n.jsx)(o.strong,{children:"CRUD (Create, Read, Update, Delete)"})," operations for a resource. This approach automatically maps common actions to specific routes, reducing boilerplate code and ensuring consistency across your application."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"introduction-to-resource-based-routing",children:"Introduction to Resource-Based Routing"}),"\n",(0,n.jsxs)(o.p,{children:["Resource-based routing is a convention-over-configuration approach that maps HTTP verbs to controller actions for a specific resource. For example, a ",(0,n.jsx)(o.code,{children:"Book"})," resource might have routes for listing books, showing a specific book, creating a new book, updating a book, and deleting a book."]}),"\n",(0,n.jsxs)(o.p,{children:["Alapa simplifies this process by automatically generating these routes when you define a ",(0,n.jsx)(o.strong,{children:"resourceful controller"}),"."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"default-resourceful-routes",children:"Default Resourceful Routes"}),"\n",(0,n.jsx)(o.p,{children:"When you define a resourceful controller, Alapa generates the following routes by default:"}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{children:"HTTP Verb"}),(0,n.jsx)(o.th,{children:"URL"}),(0,n.jsx)(o.th,{children:"Action"}),(0,n.jsx)(o.th,{children:"Route Name"}),(0,n.jsx)(o.th,{children:"Description"})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"index"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.index"})}),(0,n.jsx)(o.td,{children:"List all books"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/create"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"create"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.create"})}),(0,n.jsx)(o.td,{children:"Show the form to create a new book"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"POST"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"store"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.store"})}),(0,n.jsx)(o.td,{children:"Store a newly created book"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"show"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.show"})}),(0,n.jsx)(o.td,{children:"Show a specific book"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book/edit"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"edit"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.edit"})}),(0,n.jsx)(o.td,{children:"Show the form to edit a book"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"PUT/PATCH"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"update"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.update"})}),(0,n.jsx)(o.td,{children:"Update a specific book"})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"DELETE"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"destroy"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.destroy"})}),(0,n.jsx)(o.td,{children:"Delete a specific book"})]})]})]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"implementing-a-resource-controller",children:"Implementing a Resource Controller"}),"\n",(0,n.jsxs)(o.p,{children:["To implement a resourceful controller, create a class that implements the ",(0,n.jsx)(o.code,{children:"ResourcefulController"})," interface. Each method in the class corresponds to one of the default actions."]}),"\n",(0,n.jsx)(o.h3,{id:"example-bookcontroller",children:"Example: BookController"}),"\n",(0,n.jsx)(r,{title:"src/app/books/Controller.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { ResourcefulController, Request, Response } from "alapa";\r\nimport { Book } from "./Models"; // Assuming Book is a model representing your database entity.\r\n\r\nexport class BookController implements ResourcefulController {\r\n  // List all books\r\n  async index(req: Request, res: Response) {\r\n    const books = await Book.findAll();\r\n    res.json(books);\r\n  }\r\n\r\n  // Show the form to create a new book (optional)\r\n  create(req: Request, res: Response) {\r\n    res.render("books.create");\r\n  }\r\n\r\n  // Store a newly created book\r\n  async store(req: Request, res: Response) {\r\n    const book = new Book();\r\n    book.title = req.body.title;\r\n    book.author = req.body.author;\r\n    await book.save();\r\n    res.status(201).json(book);\r\n  }\r\n\r\n  // Show a specific book\r\n  async show(req: Request, res: Response) {\r\n    const book = await Book.find(req.params.book);\r\n    if (book) {\r\n      res.json(book);\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n\r\n  // Show the form to edit a book (optional)\r\n  async edit(req: Request, res: Response) {\r\n    const book = await Book.find(req.params.book);\r\n    res.render("books.edit", { book });\r\n  }\r\n\r\n  // Update a specific book\r\n  async update(req: Request, res: Response) {\r\n    const book = await Book.find(req.params.book);\r\n    if (book) {\r\n      book.title = req.body.title;\r\n      book.author = req.body.author;\r\n      await book.save();\r\n      res.json(book);\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n\r\n  // Delete a specific book\r\n  async destroy(req: Request, res: Response) {\r\n    const book = await Book.find(req.params.book);\r\n    if (book) {\r\n      await book.delete();\r\n      res.status(204).send();\r\n    } else {\r\n      res.status(404).json({ message: "Book not found" });\r\n    }\r\n  }\r\n}\n'})})}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"registering-resourceful-routes",children:"Registering Resourceful Routes"}),"\n",(0,n.jsxs)(o.p,{children:["To register the resourceful routes, use the ",(0,n.jsx)(o.code,{children:"resource"})," method provided by the ",(0,n.jsx)(o.code,{children:"Router"})," class. This method maps the controller methods to their respective routes."]}),"\n",(0,n.jsx)(o.h3,{id:"example-registering-routes",children:"Example: Registering Routes"}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController);\r\n\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsx)(o.p,{children:"This will generate the following routes:"}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{children:"HTTP Verb"}),(0,n.jsx)(o.th,{children:"URL"}),(0,n.jsx)(o.th,{children:"Action"}),(0,n.jsx)(o.th,{children:"Route Name"})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"index"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.index"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/create"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"create"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.create"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"POST"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"store"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.store"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"show"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.show"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"GET"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book/edit"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"edit"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.edit"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"PUT/PATCH"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"update"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.update"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"DELETE"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"/books/:book"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"destroy"})}),(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"books.destroy"})})]})]})]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"customizing-resourceful-routes",children:"Customizing Resourceful Routes"}),"\n",(0,n.jsx)(o.p,{children:"You can customize the default resourceful routes by excluding certain actions or adding additional routes."}),"\n",(0,n.jsx)(o.h3,{id:"example-excluding-routes",children:"Example: Excluding Routes"}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController, {\r\n  except: ["create", "edit"], // Exclude create and edit actions\r\n});\r\n\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsx)(o.h3,{id:"example-adding-additional-routes",children:"Example: Adding Additional Routes"}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController);\r\n\r\n// Add a custom route\r\nbookRoutes.get("/books/:book/reviews", (req, res) => {\r\n  res.send(`Reviews for book ${req.params.book}`);\r\n});\r\n\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"middleware-for-resourceful-routes",children:"Middleware for Resourceful Routes"}),"\n",(0,n.jsx)(o.p,{children:"Middleware can be applied to all resourceful routes or specific actions."}),"\n",(0,n.jsx)(o.h3,{id:"example-global-middleware",children:"Example: Global Middleware"}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\nimport { authMiddleware } from "../middleware";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController, {\r\n  middlewareAll: [authMiddleware], // Apply to all routes\r\n});\n'})})}),"\n",(0,n.jsx)(o.h3,{id:"example-route-specific-middleware",children:"Example: Route-Specific Middleware"}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\nimport { logMiddleware } from "../middleware";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController, {\r\n  middleware: {\r\n    store: [logMiddleware], // Apply to the store action only\r\n  },\r\n});\n'})})}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"openapi-documentation-for-resourceful-routes",children:"OpenAPI Documentation for Resourceful Routes"}),"\n",(0,n.jsxs)(o.p,{children:["You can use decorators like ",(0,n.jsx)(o.code,{children:"@OpenApiOperation"})," to document your resourceful routes for OpenAPI/Swagger."]}),"\n",(0,n.jsx)(o.h3,{id:"example-documenting-resourceful-routes",children:"Example: Documenting Resourceful Routes"}),"\n",(0,n.jsx)(r,{title:"src/app/books/Controller.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import {\r\n  ResourcefulController,\r\n  Request,\r\n  Response,\r\n  OpenApiOperation,\r\n} from "alapa";\r\nimport { Book } from "./Models";\r\n\r\nexport class BookController implements ResourcefulController {\r\n  @OpenApiOperation({\r\n    summary: "List all books",\r\n    description: "Returns a list of all books.",\r\n    responses: {\r\n      200: {\r\n        description: "List of books",\r\n        content: {\r\n          "application/json": {\r\n            schema: {\r\n              type: "array",\r\n              items: {\r\n                $ref: "#/components/schemas/Book",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  })\r\n  async index(req: Request, res: Response) {\r\n    const books = await Book.findAll();\r\n    res.json(books);\r\n  }\r\n}\n'})})}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"controller-configuration-options",children:"Controller Configuration Options"}),"\n",(0,n.jsxs)(o.p,{children:["All options available in ",(0,n.jsx)(o.strong,{children:"Controller-Based Routing"})," are also valid for ",(0,n.jsx)(o.strong,{children:"Resourceful Controllers"}),". These options allow you to customize the behavior of your resourceful routes."]}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{children:"Option Name"}),(0,n.jsx)(o.th,{children:"Type"}),(0,n.jsx)(o.th,{children:"Optional"}),(0,n.jsx)(o.th,{children:"Default Value"}),(0,n.jsx)(o.th,{children:"Description"})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"namePrefix"})}),(0,n.jsx)(o.td,{children:"string"}),(0,n.jsx)(o.td,{children:"Yes"}),(0,n.jsx)(o.td,{children:"undefined"}),(0,n.jsx)(o.td,{children:"Prefix added to the route names."})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"docPrefix"})}),(0,n.jsx)(o.td,{children:"string"}),(0,n.jsx)(o.td,{children:"Yes"}),(0,n.jsxs)(o.td,{children:["Global ",(0,n.jsx)(o.code,{children:"docPrefix"})," from config"]}),(0,n.jsx)(o.td,{children:"Prefix added to the API documentation path."})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"middlewareAll"})}),(0,n.jsx)(o.td,{children:"array"}),(0,n.jsx)(o.td,{children:"Yes"}),(0,n.jsx)(o.td,{children:"[]"}),(0,n.jsx)(o.td,{children:"Middleware applied to all routes in the controller."})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{children:(0,n.jsx)(o.code,{children:"middleware"})}),(0,n.jsx)(o.td,{children:"object"}),(0,n.jsx)(o.td,{children:"Yes"}),(0,n.jsx)(o.td,{children:"{}"}),(0,n.jsx)(o.td,{children:"Middleware applied to specific routes, keyed by method name."})]})]})]}),"\n",(0,n.jsxs)(o.h3,{id:"example-using-nameprefix",children:["Example: Using ",(0,n.jsx)(o.code,{children:"namePrefix"})]}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController, {\r\n  namePrefix: "app-books", // Add a prefix to route names\r\n});\r\n\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsxs)(o.h3,{id:"example-using-docprefix",children:["Example: Using ",(0,n.jsx)(o.code,{children:"docPrefix"})]}),"\n",(0,n.jsx)(r,{title:"src/app/books/router.ts",children:(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:'import { Router } from "alapa";\r\nimport { BookController } from "./Controller";\r\n\r\nconst bookRoutes = new Router();\r\nbookRoutes.resource("books", BookController, {\r\n  docPrefix: "api/v1", // Add a prefix to API documentation paths\r\n});\r\n\r\nexport default bookRoutes;\n'})})}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(o.ol,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Use Meaningful Resource Names"}),": Choose resource names that clearly describe the entity (e.g., ",(0,n.jsx)(o.code,{children:"books"}),", ",(0,n.jsx)(o.code,{children:"users"}),")."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Keep Controllers Focused"}),": Each controller should handle a single resource."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Leverage Middleware"}),": Use middleware for cross-cutting concerns like authentication and logging."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Document Your API"}),": Use OpenAPI decorators to document your routes."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Test Your Routes"}),": Write unit and integration tests for your resourceful routes."]}),"\n"]})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>l,x:()=>d});var s=r(6540);const n={},t=s.createContext(n);function l(e){const o=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(t.Provider,{value:o},e.children)}}}]);